<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="rest.installation">
    <title>Installation</title>
    <para>
        The Seam REST module runs only on Java EE 6 compliant servers such as
        <ulink url="http://www.jboss.org/jbossas">JBoss
            Application Server</ulink>
        or
        <ulink url="https://glassfish.dev.java.net/">GlassFish</ulink>
        .
    </para>

    <sect1>
        <title>Basics</title>
        <para>
            To use the Seam REST module, add
            <literal>seam-rest</literal>
            and
            <literal>seam-rest-api</literal>
            jars into the web application.
            If using Maven, add the following
            dependency
            into the web application's
            <literal>pom.xml</literal>
            configuration file.
        </para>

        <example>
            <title>Dependency added to pom.xml</title>
            <programlisting role="XML"><![CDATA[<dependency> 
	<groupId>org.jboss.seam.rest</groupId> 
	<artifactId>seam-rest</artifactId> 
	<version>${seam.rest.version}</version> 
</dependency>]]></programlisting>
        </example>

        <tip>
            <para>
                Substitute the expression ${seam.rest.version} with the most recent or appropriate version of Seam REST.
                Alternatively, you can create a
                <ulink
                    url="http://www.sonatype.com/books/mvnref-book/reference/resource-filtering-sect-properties.html#resource-filtering-sect-user-defined">Maven
                    user-defined property</ulink>
                to satisfy this substitution so you can centrally manage the version.
            </para>
        </tip>
    </sect1>

    <sect1>
        <title>Transitive dependencies</title>
        <para>
            Besides, Seam REST has several transitive dependencies (which are
            added automatically when using maven). Refer to
            <xref linkend="rest.dependencies.transitive" />
            for more details.
        </para>
    </sect1>

    <sect1>
        <title>Registering JAX-RS components explicitly</title>

        <para>
            The Seam REST module registers
            <literal>SeamExceptionMapper</literal>
            to hook into the exception processing mechanism of JAX-RS and
            <literal>TemplatingMessageBodyWriter</literal>
            to provide templating support.
        </para>

        <para>
            These components are registered by default if classpath scanning
            of JAX-RS resources and providers is enabled (an empty
            <literal>javax.ws.rs.core.Application</literal>
            subclass is provided).
        </para>

        <programlisting role="JAVA"><![CDATA[@ApplicationPath("/api/*")
public class MyApplication extends Application {}]]></programlisting>

        <para>
            Otherwise, if the Application's
            <literal>getClasses()</literal>
            method is overridden to select resources and providers explicitly
            add
            <literal>SeamExceptionMapper</literal>
            and
            <literal>TemplatingMessageBodyWriter</literal>
            .
        </para>

        <programlisting role="JAVA"><![CDATA[@ApplicationPath("/api/*")
public class MyApplication extends Application
{
   @Override
   public Set<Class<?>> getClasses()
   {
      Set<Class<?>> classes = new HashSet<Class<?>>();
      ...
      ...
      ...
      classes.add(SeamExceptionMapper.class);
      classes.add(TemplatingMessageBodyWriter.class);
      return classes;
   }
}]]></programlisting>
    </sect1>

    <sect1>
        <title>Servlet container support</title>

        <para>
            Seam REST can be used with plain Servlet containers such as Apache Tomcat 7. Firstly, we need to enhance the
            Servlet container
            capabilities. This is done by bundling Weld and RESTEasy within the application and configuring
            them. See the
            jaxrs-exceptions example and its <literal>tomcat</literal> build profile for more details.
        </para>

        <para>
            In a EE6-compliant environment, Seam REST would be bootstrapped by a Servlet listener. However,
            <literal>weld-servlet</literal>
            does not support CDI injection into Servlet listeners. Therefore, add the following line to your application's
            <filename>web.xml</filename>
            file to bootstrap Seam REST using Servlet.
        </para>

        <programlisting role="XML"><![CDATA[<servlet>
        <display-name>Servlet REST Listener Startup</display-name>
        <servlet-class>org.jboss.seam.rest.SeamRestStartupListener</servlet-class>
        <load-on-startup>1</load-on-startup>
</servlet>]]></programlisting>
    </sect1>
</chapter>